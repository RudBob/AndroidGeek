package com.xiaomai.geek.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xiaomai.geek.db.Article;
import com.xiaomai.geek.db.ArticleRecord;
import com.xiaomai.geek.db.Config;
import com.xiaomai.geek.db.Task;

import com.xiaomai.geek.db.ArticleDao;
import com.xiaomai.geek.db.ArticleRecordDao;
import com.xiaomai.geek.db.ConfigDao;
import com.xiaomai.geek.db.TaskDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig articleDaoConfig;
    private final DaoConfig articleRecordDaoConfig;
    private final DaoConfig configDaoConfig;
    private final DaoConfig taskDaoConfig;

    private final ArticleDao articleDao;
    private final ArticleRecordDao articleRecordDao;
    private final ConfigDao configDao;
    private final TaskDao taskDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        articleDaoConfig = daoConfigMap.get(ArticleDao.class).clone();
        articleDaoConfig.initIdentityScope(type);

        articleRecordDaoConfig = daoConfigMap.get(ArticleRecordDao.class).clone();
        articleRecordDaoConfig.initIdentityScope(type);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        articleDao = new ArticleDao(articleDaoConfig, this);
        articleRecordDao = new ArticleRecordDao(articleRecordDaoConfig, this);
        configDao = new ConfigDao(configDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);

        registerDao(Article.class, articleDao);
        registerDao(ArticleRecord.class, articleRecordDao);
        registerDao(Config.class, configDao);
        registerDao(Task.class, taskDao);
    }
    
    public void clear() {
        articleDaoConfig.clearIdentityScope();
        articleRecordDaoConfig.clearIdentityScope();
        configDaoConfig.clearIdentityScope();
        taskDaoConfig.clearIdentityScope();
    }

    public ArticleDao getArticleDao() {
        return articleDao;
    }

    public ArticleRecordDao getArticleRecordDao() {
        return articleRecordDao;
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

}
